{"version":3,"sources":["component/Task/Task.module.css","component/Task/Task.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Task","props","ListItem","className","classes","task__todos","ListItemText","primary","text","secondary","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","todos","setTodos","input","setInput","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","task","todosArray","el","FormControl","InputLabel","Input","onChange","event","target","value","Button","disabled","type","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","variant","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,YAAc,4B,+LCWjBC,EARF,SAACC,GACV,OACI,cAACC,EAAA,EAAD,CAAUC,UAAWC,IAAQC,YAA7B,SACI,cAACC,EAAA,EAAD,CAAcC,QAASN,EAAMO,KAAMC,UAAU,gB,wCCO1CC,EAZKC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGIC,YCuCRC,MA5Cf,WACI,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEAC,qBAAW,WACPjB,EAAGkB,WAAW,SAASC,QAAQ,YAAa,QAAQC,YAAW,SAAAC,GAC3DP,EAASO,EAASC,KAAKC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,OAAOC,cAElD,CAACb,IAEJ,IAAMc,EAAad,EAAMU,KAAI,SAAAK,GAAE,OAAI,cAAC,EAAD,CAAM9B,KAAM8B,OAc/C,OACI,sBAAKnC,UAAU,MAAf,UACI,kDAEA,eAACoC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,2BACA,cAACC,EAAA,EAAD,CAAOC,SAAU,SAAAC,GAAK,OAAIjB,EAASiB,EAAMC,OAAOC,QAAQA,MAAOpB,OAGnE,cAACqB,EAAA,EAAD,CAAQC,UAAWtB,EAAOuB,KAAK,SAASC,QArBhC,SAAAN,GACZA,EAAMO,iBAENxC,EAAGkB,WAAW,SAASuB,IAAI,CACvBf,KAAMX,EACN2B,UAAWzC,IAASS,UAAUiC,WAAWC,oBAG7C9B,EAAS,GAAD,mBAAKD,GAAL,CAAYE,KACpBC,EAAS,KAYqD6B,QAAQ,YAAYC,MAAM,UAApF,uBAIA,6BACMnB,QCjCHoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.27f342fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"task__todos\":\"Task_task__todos__3S3gi\"};","import React from 'react';\nimport {List, ListItem, ListItemText} from \"@material-ui/core\";\nimport classes from './Task.module.css';\n\nconst Task = (props) => {\n    return (\n        <ListItem className={classes.task__todos}>\n            <ListItemText primary={props.text} secondary=\"Deadline\"/>\n        </ListItem>\n    );\n}\n\nexport default Task;","import firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyAbL4istlV9YL3ypToUYP4aeYsJ72OpZys\",\n    authDomain: \"to-do-30340.firebaseapp.com\",\n    projectId: \"to-do-30340\",\n    storageBucket: \"to-do-30340.appspot.com\",\n    messagingSenderId: \"188606617746\",\n    appId: \"1:188606617746:web:17e4fdf866a0bf7b8eae4b\",\n    measurementId: \"G-M64GN7VDBW\"\n})\n\nconst db = firebaseApp.firestore();\n\nexport default db;","import React, {useState, useEffect} from \"react\";\nimport \"./App.css\";\nimport Task from \"./component/Task/Task\";\nimport {Button, FormControl, Input, InputLabel, List} from \"@material-ui/core\";\nimport db from './firebase'\nimport firebase from 'firebase';\n\nfunction App() {\n    const [todos, setTodos] = useState([]);\n    const [input, setInput] = useState('');\n\n    useEffect( () => {\n        db.collection('todos').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n            setTodos(snapshot.docs.map(doc => doc.data().task))\n        })\n    }, [todos]);\n\n    const todosArray = todos.map(el => <Task text={el}/>)\n\n    const addTask = event => {\n        event.preventDefault();\n\n        db.collection('todos').add({\n            task: input,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        })\n\n        setTodos([...todos, input]);\n        setInput('');\n    }\n\n    return (\n        <div className=\"App\">\n            <h1>Hello visiter!!!</h1>\n\n            <FormControl>\n                <InputLabel>Write a Todo</InputLabel>\n                <Input onChange={event => setInput(event.target.value)} value={input}/>\n            </FormControl>\n\n            <Button disabled={!input} type=\"submit\" onClick={addTask} variant=\"contained\" color=\"primary\">\n                Add To-Do\n            </Button>\n\n            <ul>\n                { todosArray }\n            </ul>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}